name: Playwright Tests with Allure Report (Docker + GitHub Pages)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write  # ‚úÖ n√©cessaire pour publier sur GitHub Pages

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: recette

    steps:
      # 1Ô∏è‚É£ Cloner le d√©p√¥t
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Construire l‚Äôimage Docker Playwright
      - name: Build Docker image
        run: docker build -t playwright-tests .

      # 3Ô∏è‚É£ Cr√©er le fichier .env.recette √† partir des secrets
      - name: Create .env.recette file
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env.recette
          echo "LOGIN_USERNAME=${{ secrets.LOGIN_USERNAME }}" >> .env.recette
          echo "LOGIN_PASSWORD=${{ secrets.LOGIN_PASSWORD }}" >> .env.recette
          echo "LOGIN_INACTIF_USERNAME=${{ secrets.LOGIN_INACTIF_USERNAME }}" >> .env.recette
          echo "LOGIN_INACTIF_PASSWORD=${{ secrets.LOGIN_INACTIF_PASSWORD }}" >> .env.recette

      # 4Ô∏è‚É£ V√©rifier la pr√©sence du fichier d‚Äôenvironnement
      - name: Debug .env.recette existence
        run: |
          echo "[DEBUG] Contents of workspace root:"
          ls -la
          echo "---------"
          echo "[DEBUG] .env.recette content:"
          cat .env.recette || echo "file not found"

      # 5Ô∏è‚É£ Ex√©cuter les tests Playwright dans Docker
      - name: Run Playwright tests
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/.env.recette:/app/.env.recette \
            -v ${{ github.workspace }}/allure-results:/app/allure-results \
            playwright-tests npx playwright test --reporter=line,allure-playwright || true

      # 6Ô∏è‚É£ G√©n√©rer le rapport Allure dans Docker
      - name: Generate Allure report
        if: always()
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/allure-results:/app/allure-results \
            -v ${{ github.workspace }}/allure-report:/app/allure-report \
            playwright-tests npx allure generate /app/allure-results --clean -o /app/allure-report

      # 7Ô∏è‚É£ V√©rifier le contenu du rapport g√©n√©r√©
      - name: Check Allure report content
        if: always()
        run: |
          echo "üìÅ Contenu du dossier allure-report :"
          ls -la allure-report || echo "‚ö†Ô∏è Aucun rapport g√©n√©r√© !"

      # 8Ô∏è‚É£ Uploader le rapport comme artefact GitHub
      - name: Upload Allure report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # 9Ô∏è‚É£ D√©ployer le rapport sur GitHub Pages dans un dossier par run
      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          publish_branch: gh-pages
          destination_dir: run-${{ github.run_number }}
          keep_files: true
          force_orphan: false
          commit_message: "üöÄ Publish Allure report run #${{ github.run_number }}"

      # üîü G√©n√©rer une page d‚Äôindex listant tous les rapports pr√©c√©dents
      - name: Generate Allure index page
        if: always()
        run: |
          echo "<html><head><meta charset='UTF-8'><title>Allure Reports</title></head><body>" > index.html
          echo "<h1>üìä Historique des rapports Allure</h1><ul>" >> index.html
          for dir in $(git ls-remote --heads origin | cut -f2 | grep -oE 'run-[0-9]+'); do
            echo "<li><a href='${dir}/index.html'>${dir}</a></li>" >> index.html
          done
          echo "</ul></body></html>" >> index.html

      # 1Ô∏è‚É£1Ô∏è‚É£ D√©ployer l‚Äôindex en gardant les rapports existants
      - name: Deploy Allure index to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          keep_files: true
          commit_message: "üóÇÔ∏è Update Allure report index"

